
head32.o:     file format elf32-i386


Disassembly of section .text:

00000000 <_stext>:
       0:	fc                   	cld    
       1:	b8 18 00 00 00       	mov    $0x18,%eax
       6:	8e d8                	mov    %eax,%ds
       8:	8e c0                	mov    %eax,%es
       a:	8e e0                	mov    %eax,%fs
       c:	8e e8                	mov    %eax,%gs
       e:	66 09 db             	or     %bx,%bx
      11:	74 12                	je     25 <_stext+0x25>
      13:	8b 15 00 00 00 40    	mov    0x40000000,%edx
      19:	21 d2                	and    %edx,%edx
      1b:	74 08                	je     25 <_stext+0x25>
      1d:	0f 20 e0             	mov    %cr4,%eax
      20:	09 d0                	or     %edx,%eax
      22:	0f 22 e0             	mov    %eax,%cr4
      25:	bf 00 00 00 40       	mov    $0x40000000,%edi
      2a:	b8 07 00 00 00       	mov    $0x7,%eax
      2f:	ab                   	stos   %eax,%es:(%edi)
      30:	05 00 10 00 00       	add    $0x1000,%eax
      35:	81 ff 00 00 00 40    	cmp    $0x40000000,%edi
      3b:	75 f2                	jne    2f <_stext+0x2f>
      3d:	b8 00 00 00 40       	mov    $0x40000000,%eax
      42:	0f 22 d8             	mov    %eax,%cr3
      45:	0f 20 c0             	mov    %cr0,%eax
      48:	0d 00 00 00 80       	or     $0x80000000,%eax
      4d:	0f 22 c0             	mov    %eax,%cr0
      50:	eb 00                	jmp    52 <_stext+0x52>
      52:	b8 5d 00 00 00       	mov    $0x5d,%eax
      57:	ff 25 00 00 00 00    	jmp    *0x0
      5d:	8b 25 00 00 00 00    	mov    0x0,%esp
      63:	66 09 db             	or     %bx,%bx
      66:	74 05                	je     6d <_stext+0x6d>
      68:	6a 00                	push   $0x0
      6a:	9d                   	popf   
      6b:	eb 5c                	jmp    c9 <checkCPUtype>
      6d:	31 c0                	xor    %eax,%eax
      6f:	bf 00 00 00 00       	mov    $0x0,%edi
      74:	b9 00 00 00 00       	mov    $0x0,%ecx
      79:	29 f9                	sub    %edi,%ecx
      7b:	f3 aa                	rep stos %al,%es:(%edi)
      7d:	e8 2e 01 00 00       	call   1b0 <setup_idt>
      82:	6a 00                	push   $0x0
      84:	9d                   	popf   
      85:	bf 00 00 00 00       	mov    $0x0,%edi
      8a:	b9 00 02 00 00       	mov    $0x200,%ecx
      8f:	fc                   	cld    
      90:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
      92:	31 c0                	xor    %eax,%eax
      94:	b9 00 02 00 00       	mov    $0x200,%ecx
      99:	f3 ab                	rep stos %eax,%es:(%edi)
      9b:	8b 35 28 02 00 00    	mov    0x228,%esi
      a1:	21 f6                	and    %esi,%esi
      a3:	75 18                	jne    bd <_stext+0xbd>
      a5:	66 81 3d 20 00 09 00 	cmpw   $0xa33f,0x90020
      ac:	3f a3 
      ae:	75 19                	jne    c9 <checkCPUtype>
      b0:	0f b7 35 22 00 09 00 	movzwl 0x90022,%esi
      b7:	81 c6 00 00 09 00    	add    $0x90000,%esi
      bd:	bf 00 08 00 00       	mov    $0x800,%edi
      c2:	b9 00 02 00 00       	mov    $0x200,%ecx
      c7:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)

000000c9 <checkCPUtype>:
      c9:	c7 05 08 00 00 00 ff 	movl   $0xffffffff,0x8
      d0:	ff ff ff 
      d3:	c7 05 00 00 00 00 03 	movl   $0x3,0x0
      da:	00 00 00 
      dd:	9c                   	pushf  
      de:	58                   	pop    %eax
      df:	89 c1                	mov    %eax,%ecx
      e1:	35 00 00 04 00       	xor    $0x40000,%eax
      e6:	50                   	push   %eax
      e7:	9d                   	popf   
      e8:	9c                   	pushf  
      e9:	58                   	pop    %eax
      ea:	31 c8                	xor    %ecx,%eax
      ec:	25 00 00 04 00       	and    $0x40000,%eax
      f1:	c7 05 00 00 00 00 04 	movl   $0x4,0x0
      f8:	00 00 00 
      fb:	89 c8                	mov    %ecx,%eax
      fd:	35 00 00 20 00       	xor    $0x200000,%eax
     102:	50                   	push   %eax
     103:	9d                   	popf   
     104:	9c                   	pushf  
     105:	58                   	pop    %eax
     106:	31 c8                	xor    %ecx,%eax
     108:	51                   	push   %ecx
     109:	9d                   	popf   
     10a:	25 00 00 20 00       	and    $0x200000,%eax
     10f:	31 c0                	xor    %eax,%eax
     111:	0f a2                	cpuid  
     113:	a3 08 00 00 00       	mov    %eax,0x8
     118:	89 1d 10 00 00 00    	mov    %ebx,0x10
     11e:	89 15 14 00 00 00    	mov    %edx,0x14
     124:	89 0d 18 00 00 00    	mov    %ecx,0x18
     12a:	09 c0                	or     %eax,%eax
     12c:	b8 01 00 00 00       	mov    $0x1,%eax
     131:	0f a2                	cpuid  
     133:	88 c1                	mov    %al,%cl
     135:	80 e4 0f             	and    $0xf,%ah
     138:	88 25 00 00 00 00    	mov    %ah,0x0
     13e:	24 f0                	and    $0xf0,%al
     140:	a2 02 00 00 00       	mov    %al,0x2
     145:	80 e1 0f             	and    $0xf,%cl
     148:	88 0d 03 00 00 00    	mov    %cl,0x3
     14e:	89 15 0c 00 00 00    	mov    %edx,0xc

00000154 <is486>:
     154:	0f 20 c0             	mov    %cr0,%eax
     157:	25 11 00 00 80       	and    $0x80000011,%eax
     15c:	0d 22 00 05 00       	or     $0x50022,%eax
     161:	eb 00                	jmp    163 <is486+0xf>
     163:	0f 22 c0             	mov    %eax,%cr0
     166:	fe 05 af 01 00 00    	incb   0x1af
     16c:	0f 01 15 2a 02 00 00 	lgdtl  0x22a
     173:	0f 01 1d 22 02 00 00 	lidtl  0x222
     17a:	ea 81 01 00 00 10 00 	ljmp   $0x10,$0x181
     181:	b8 18 00 00 00       	mov    $0x18,%eax
     186:	8e d8                	mov    %eax,%ds
     188:	8e c0                	mov    %eax,%es
     18a:	8e e0                	mov    %eax,%fs
     18c:	8e e8                	mov    %eax,%gs
     18e:	8e d0                	mov    %eax,%ss
     190:	31 c0                	xor    %eax,%eax
     192:	0f 00 d0             	lldt   %ax
     195:	fc                   	cld    
     196:	8a 0d af 01 00 00    	mov    0x1af,%cl
     19c:	80 f9 01             	cmp    $0x1,%cl
     19f:	74 07                	je     1a8 <is486+0x54>
     1a1:	e8 fc ff ff ff       	call   1a2 <is486+0x4e>
     1a6:	eb 05                	jmp    1ad <L6>
     1a8:	e8 fc ff ff ff       	call   1a9 <is486+0x55>

000001ad <L6>:
     1ad:	eb fe                	jmp    1ad <L6>

000001af <ready>:
	...

000001b0 <setup_idt>:
     1b0:	8d 15 04 02 00 00    	lea    0x204,%edx
     1b6:	b8 00 00 10 00       	mov    $0x100000,%eax
     1bb:	66 89 d0             	mov    %dx,%ax
     1be:	66 ba 00 8e          	mov    $0x8e00,%dx
     1c2:	8d 3d 00 00 00 00    	lea    0x0,%edi
     1c8:	b9 00 01 00 00       	mov    $0x100,%ecx

000001cd <rp_sidt>:
     1cd:	89 07                	mov    %eax,(%edi)
     1cf:	89 57 04             	mov    %edx,0x4(%edi)
     1d2:	83 c7 08             	add    $0x8,%edi
     1d5:	49                   	dec    %ecx
     1d6:	75 f5                	jne    1cd <rp_sidt>
     1d8:	c3                   	ret    
     1d9:	8d 76 00             	lea    0x0(%esi),%esi

000001dc <stack_start>:
     1dc:	00 20                	add    %ah,(%eax)
     1de:	00 00                	add    %al,(%eax)
     1e0:	18 00                	sbb    %al,(%eax)
	...

000001e4 <int_msg>:
     1e4:	55                   	push   %ebp
     1e5:	6e                   	outsb  %ds:(%esi),(%dx)
     1e6:	6b 6f 77 6e          	imul   $0x6e,0x77(%edi),%ebp
     1ea:	20 69 6e             	and    %ch,0x6e(%ecx)
     1ed:	74 65                	je     254 <gdt+0x28>
     1ef:	72 72                	jb     263 <gdt+0x37>
     1f1:	75 70                	jne    263 <gdt+0x37>
     1f3:	74 20                	je     215 <ignore_int+0x11>
     1f5:	62 79 20             	bound  %edi,0x20(%ecx)
     1f8:	68 61 72 76 65       	push   $0x65767261
     1fd:	79 64                	jns    263 <gdt+0x37>
     1ff:	6f                   	outsl  %ds:(%esi),(%dx)
     200:	6e                   	outsb  %ds:(%esi),(%dx)
     201:	67 0a 00             	or     (%bx,%si),%al

00000204 <ignore_int>:
     204:	fc                   	cld    
     205:	50                   	push   %eax
     206:	51                   	push   %ecx
     207:	52                   	push   %edx
     208:	06                   	push   %es
     209:	1e                   	push   %ds
     20a:	b8 18 00 00 00       	mov    $0x18,%eax
     20f:	8e d8                	mov    %eax,%ds
     211:	8e c0                	mov    %eax,%es
     213:	68 e4 01 00 00       	push   $0x1e4
     218:	58                   	pop    %eax
     219:	1f                   	pop    %ds
     21a:	5a                   	pop    %edx
     21b:	59                   	pop    %ecx
     21c:	58                   	pop    %eax
     21d:	cf                   	iret   
     21e:	66 90                	xchg   %ax,%ax
	...

00000222 <idt_descr>:
     222:	ff 07                	incl   (%edi)

00000224 <idt>:
     224:	00 00                	add    %al,(%eax)
     226:	00 00                	add    %al,(%eax)
	...

0000022a <gdt_descr>:
     22a:	5f                   	pop    %edi
     22b:	04                   	.byte 0x4

0000022c <gdt>:
	...

00001000 <swapper_pg_dir>:
    1000:	07                   	pop    %es
    1001:	20 10                	and    %dl,(%eax)
    1003:	00 07                	add    %al,(%edi)
    1005:	30 10                	xor    %dl,(%eax)
	...
    1bff:	00 07                	add    %al,(%edi)
    1c01:	20 10                	and    %dl,(%eax)
    1c03:	00 07                	add    %al,(%edi)
    1c05:	30 10                	xor    %dl,(%eax)
	...

00002000 <pg0>:
	...

00003000 <pg1>:
	...

00004000 <empty_zero_page>:
	...

00005000 <empty_bad_page>:
	...

00006000 <empty_bad_pte_table>:
	...

00007000 <empty_bad_pmd_table>:
	...
